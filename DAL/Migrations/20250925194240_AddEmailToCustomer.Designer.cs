// <auto-generated />
using System;
using DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(TradeMarketDbContext))]
    [Migration("20250925194240_AddEmailToCustomer")]
    partial class AddEmailToCustomer
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAL.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DiscountValue")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DiscountValue = 5,
                            PersonId = 1
                        },
                        new
                        {
                            Id = 2,
                            DiscountValue = 10,
                            PersonId = 2
                        },
                        new
                        {
                            Id = 3,
                            DiscountValue = 0,
                            PersonId = 3
                        },
                        new
                        {
                            Id = 4,
                            DiscountValue = 15,
                            PersonId = 4
                        });
                });

            modelBuilder.Entity("DAL.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Surname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1990, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "test@mail.com",
                            Name = "John",
                            Surname = "Doe"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(1985, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "test@mail.com",
                            Name = "Anna",
                            Surname = "Smith"
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(2000, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "test@mail.com",
                            Name = "Mark",
                            Surname = "Johnson"
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(1995, 8, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "test@mail.com",
                            Name = "Sophia",
                            Surname = "Williams"
                        });
                });

            modelBuilder.Entity("DAL.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Price = 2.50m,
                            ProductCategoryId = 1,
                            ProductName = "Cola"
                        },
                        new
                        {
                            Id = 2,
                            Price = 3.00m,
                            ProductCategoryId = 1,
                            ProductName = "Juice"
                        },
                        new
                        {
                            Id = 3,
                            Price = 1.20m,
                            ProductCategoryId = 1,
                            ProductName = "Water"
                        },
                        new
                        {
                            Id = 4,
                            Price = 1.80m,
                            ProductCategoryId = 2,
                            ProductName = "Chips"
                        },
                        new
                        {
                            Id = 5,
                            Price = 2.20m,
                            ProductCategoryId = 2,
                            ProductName = "Chocolate"
                        },
                        new
                        {
                            Id = 6,
                            Price = 1.50m,
                            ProductCategoryId = 3,
                            ProductName = "Milk"
                        },
                        new
                        {
                            Id = 7,
                            Price = 4.50m,
                            ProductCategoryId = 3,
                            ProductName = "Cheese"
                        });
                });

            modelBuilder.Entity("DAL.Entities.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryName = "Beverages"
                        },
                        new
                        {
                            Id = 2,
                            CategoryName = "Snacks"
                        },
                        new
                        {
                            Id = 3,
                            CategoryName = "Dairy"
                        });
                });

            modelBuilder.Entity("DAL.Entities.Receipt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCheckedOut")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OperationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Receipts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 1,
                            IsCheckedOut = true,
                            OperationDate = new DateTime(2025, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 2,
                            IsCheckedOut = true,
                            OperationDate = new DateTime(2025, 8, 12, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 3,
                            IsCheckedOut = false,
                            OperationDate = new DateTime(2025, 8, 18, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 4,
                            IsCheckedOut = true,
                            OperationDate = new DateTime(2025, 8, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("DAL.Entities.ReceiptDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("DiscountUnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ReceiptId")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("ReceiptId");

                    b.ToTable("ReceiptDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DiscountUnitPrice = 2.25m,
                            ProductId = 1,
                            Quantity = 2,
                            ReceiptId = 1,
                            UnitPrice = 2.50m
                        },
                        new
                        {
                            Id = 2,
                            DiscountUnitPrice = 1.62m,
                            ProductId = 4,
                            Quantity = 1,
                            ReceiptId = 1,
                            UnitPrice = 1.80m
                        },
                        new
                        {
                            Id = 3,
                            DiscountUnitPrice = 2.70m,
                            ProductId = 2,
                            Quantity = 3,
                            ReceiptId = 2,
                            UnitPrice = 3.00m
                        },
                        new
                        {
                            Id = 4,
                            DiscountUnitPrice = 1.35m,
                            ProductId = 6,
                            Quantity = 2,
                            ReceiptId = 2,
                            UnitPrice = 1.50m
                        },
                        new
                        {
                            Id = 5,
                            DiscountUnitPrice = 1.20m,
                            ProductId = 3,
                            Quantity = 5,
                            ReceiptId = 3,
                            UnitPrice = 1.20m
                        },
                        new
                        {
                            Id = 6,
                            DiscountUnitPrice = 2.00m,
                            ProductId = 5,
                            Quantity = 1,
                            ReceiptId = 3,
                            UnitPrice = 2.20m
                        },
                        new
                        {
                            Id = 7,
                            DiscountUnitPrice = 4.00m,
                            ProductId = 7,
                            Quantity = 2,
                            ReceiptId = 4,
                            UnitPrice = 4.50m
                        },
                        new
                        {
                            Id = 8,
                            DiscountUnitPrice = 2.25m,
                            ProductId = 1,
                            Quantity = 1,
                            ReceiptId = 4,
                            UnitPrice = 2.50m
                        });
                });

            modelBuilder.Entity("DAL.Entities.Customer", b =>
                {
                    b.HasOne("DAL.Entities.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("DAL.Entities.Product", b =>
                {
                    b.HasOne("DAL.Entities.ProductCategory", "Category")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DAL.Entities.Receipt", b =>
                {
                    b.HasOne("DAL.Entities.Customer", "Customer")
                        .WithMany("Receipts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("DAL.Entities.ReceiptDetail", b =>
                {
                    b.HasOne("DAL.Entities.Product", "Product")
                        .WithMany("ReceiptDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Entities.Receipt", "Receipt")
                        .WithMany("ReceiptDetails")
                        .HasForeignKey("ReceiptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Receipt");
                });

            modelBuilder.Entity("DAL.Entities.Customer", b =>
                {
                    b.Navigation("Receipts");
                });

            modelBuilder.Entity("DAL.Entities.Product", b =>
                {
                    b.Navigation("ReceiptDetails");
                });

            modelBuilder.Entity("DAL.Entities.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("DAL.Entities.Receipt", b =>
                {
                    b.Navigation("ReceiptDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
